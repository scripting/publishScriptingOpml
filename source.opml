<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Fri, 02 Jul 2021 13:51:22 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: publishScriptingOpml</title>
		<dateCreated>Mon, 21 Jun 2021 15:19:50 GMT</dateCreated>
		<dateModified>Fri, 02 Jul 2021 13:51:22 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 3, 4, 11, 40, 41, 43</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>57</windowTop>
		<windowLeft>249</windowLeft>
		<windowBottom>1154</windowBottom>
		<windowRight>1294</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/publishscriptingopml/" created="Mon, 08 Mar 2021 14:38:54 GMT">
			<outline text="notes.opml" created="Fri, 25 Jun 2021 15:46:06 GMT">
				<outline text="6/28/21; 11:41:13 AM by DW" created="Mon, 28 Jun 2021 15:41:12 GMT">
					<outline text="Generated an instant outline url for this outline." created="Mon, 28 Jun 2021 16:06:41 GMT">
						<outline text="http://instantoutliner.com/qk" created="Mon, 28 Jun 2021 15:58:52 GMT"/>
						<outline text="This code runs in Frontier." created="Mon, 28 Jun 2021 16:06:50 GMT">
							<outline text="local (apiUrl = &quot;http://instantoutliner.com/createglue?&quot;, flfirst = true)"/>
							<outline text="on pushparam (name, val) ">
								<outline text="if not flfirst">
									<outline text="apiUrl = apiUrl + &quot;&amp;&quot;;"/>
									</outline>
								<outline text="apiUrl = apiUrl + name + &quot;=&quot; + string.urlencode (val);"/>
								<outline text="flfirst = false" created="Mon, 28 Jun 2021 15:53:51 GMT"/>
								<outline text="flfirst = false;"/>
								</outline>
							<outline text="pushparam (&quot;url&quot;, &quot;https://raw.githubusercontent.com/scripting/instantOutlines/main/outlines/scripting.opml&quot;);"/>
							<outline text="pushparam (&quot;title&quot;, &quot;Scripting News&quot;);"/>
							<outline text="pushparam (&quot;description&quot;, &quot;It's even worse than it appears.&quot;);"/>
							<outline text="pushparam (&quot;socketserver&quot;, &quot;ws://sockets.scripting.com:1239&quot;);"/>
							<outline text="scratchpad.url = apiUrl"/>
							</outline>
						</outline>
					<outline text="We can't delete urlInstant from the head section of the OPML." created="Mon, 28 Jun 2021 15:48:50 GMT">
						<outline text="We need it to open the outline in LO2." created="Mon, 28 Jun 2021 15:49:22 GMT"/>
						<outline text="Drummer won't need it. " created="Mon, 28 Jun 2021 15:49:13 GMT"/>
						</outline>
					<outline text="You can run this locally. To make it ping, for a test, do this:" created="Mon, 28 Jun 2021 15:41:13 GMT">
						<outline text="http://localhost:1453/ping" created="Mon, 28 Jun 2021 15:41:23 GMT"/>
						</outline>
					<outline text="The comment below is a lie, we are using github for storing the generated OPML for scripting.com." created="Mon, 28 Jun 2021 15:36:18 GMT"/>
					</outline>
				<outline text="6/25/21; 11:46:19 AM by DW" created="Fri, 25 Jun 2021 15:46:09 GMT">
					<outline text="switched away from using github for storage, now using S3." created="Fri, 25 Jun 2021 15:46:20 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;publishscriptingopml&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A simple server that copies scripting.com's OPML to the instantOutlines project on GitHub, when pinged.&quot;," created="Fri, 02 Jul 2021 13:45:33 GMT"/>
					<outline text="&quot;version&quot;: &quot;0.4.2&quot;,"/>
					<outline text="&quot;main&quot;: &quot;pubscriptopml.js&quot;," created="Mon, 21 Jun 2021 21:16:20 GMT"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opmltojs&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davegithub&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="pubscriptopml.js" created="Mon, 08 Mar 2021 15:16:10 GMT">
				<outline text="const myVersion = &quot;0.4.2&quot;, myProductName = &quot;publishscriptingopml&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Mon, 08 Mar 2021 15:16:36 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); "/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const opmlToJs = require (&quot;opmltojs&quot;);"/>
				<outline text="const davegithub = require (&quot;davegithub&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;); "/>
				<outline text="" created="Sat, 13 Mar 2021 15:42:13 GMT"/>
				<outline text="var config = {" created="Mon, 08 Mar 2021 15:19:32 GMT">
					<outline text="port: process.env.PORT || 1453,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="" created="Mon, 21 Jun 2021 21:18:12 GMT"/>
					<outline text="urlOpml: &quot;http://drummer.scripting.com/davewiner/blog.opml&quot;," created="Thu, 17 Jun 2021 19:55:02 GMT"/>
					<outline text="urlUpdateSocket: &quot;ws://sockets.scripting.com:1239&quot;" created="Thu, 17 Jun 2021 22:12:45 GMT"/>
					<outline text="};" created="Mon, 08 Mar 2021 15:19:38 GMT"/>
					</outline>
				<outline text="" created="Sat, 13 Mar 2021 15:49:47 GMT"/>
				<outline text="const fnameConfig = &quot;config.json&quot;;" created="Mon, 21 Jun 2021 21:21:19 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 15:43:22 GMT"/>
				<outline text="function getScriptingOpmlUrl () {" created="Thu, 17 Jun 2021 22:16:12 GMT">
					<outline text="return (config.github.baseRepoUrl + config.github.repoPath + &quot;scripting.opml&quot;);" created="Thu, 17 Jun 2021 22:16:43 GMT"/>
					<outline text="}" created="Thu, 17 Jun 2021 22:16:23 GMT"/>
					</outline>
				<outline text="function httpReadUrl (url, callback) {" created="Mon, 20 Jan 2014 17:26:34 GMT" pgfnum="36035">
					<outline text="request (url, function (error, response, data) {">
						<outline text="if (!error &amp;&amp; (response.statusCode == 200)) {">
							<outline text="callback (data) "/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="callback (undefined);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 20 Jan 2014 17:26:49 GMT" pgfnum="36038"/>
					</outline>
				<outline text="function uploadToGithub (relpath, data, type, callback) {">
					<outline text="const options = {">
						<outline text="username: config.github.username,"/>
						<outline text="repo: config.github.repo,"/>
						<outline text="repoPath: config.github.repoPath + relpath,"/>
						<outline text="password: config.github.password,"/>
						<outline text="data: data,"/>
						<outline text="type: (type === undefined) ? &quot;text/plain&quot; : type,"/>
						<outline text="committer: config.github.committer,"/>
						<outline text="message: config.github.message,"/>
						<outline text="userAgent: config.github.userAgent"/>
						<outline text="};"/>
						</outline>
					<outline text="console.log (&quot;uploadToGithub: options ==  &quot; + utils.jsonStringify (options));" isComment="true" created="Fri, 04 Jun 2021 19:48:03 GMT"/>
					<outline text="davegithub.uploadFile (options, function (err, response, body) {">
						<outline text="console.log (&quot;uploadToGithub: url == &quot; + getScriptingOpmlUrl () + &quot;, status == &quot; + response.statusCode); //xxx"/>
						<outline text="if (err) {" created="Fri, 04 Jun 2021 19:42:51 GMT">
							<outline text="console.log (&quot;uploadToGithub: err.message == &quot; + err.message);" created="Fri, 04 Jun 2021 19:42:55 GMT"/>
							<outline text="}" created="Fri, 04 Jun 2021 19:43:04 GMT"/>
							</outline>
						<outline text="//stats" isComment="true">
							<outline text="var now = new Date ();"/>
							<outline text="stats.ctUploads++;"/>
							<outline text="stats.whenLastUpload = now;"/>
							<outline text="if (err) {">
								<outline text="stats.ctUploadErrors++;"/>
								<outline text="stats.ctConsecutiveUploadErrors++;"/>
								<outline text="stats.whenLastUploadError = now;"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="stats.ctConsecutiveUploadErrors = 0;"/>
								<outline text="}"/>
								</outline>
							<outline text="statsChanged ();"/>
							</outline>
						<outline text="if (callback !== undefined) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 08 Mar 2021 15:20:30 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (err.message);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:32 GMT"/>
							</outline>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Thu, 17 Jun 2021 19:40:57 GMT"/>
				<outline text="function handlePing (callback) {" created="Mon, 21 Jun 2021 21:19:45 GMT">
					<outline text="httpReadUrl (config.urlOpml, function (opmltext) { " created="Thu, 17 Jun 2021 19:56:51 GMT">
						<outline text="if (opmltext !== undefined) {" created="Thu, 17 Jun 2021 19:58:44 GMT">
							<outline text="opmlToJs.parseWithError (opmltext, function (err, theOutline) {">
								<outline text="if (err) {">
									<outline text="console.log (err.message);"/>
									<outline text="callback (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="delete theOutline.opml.head.urlJson;" created="Thu, 17 Jun 2021 22:18:13 GMT"/>
									<outline text="delete theOutline.opml.head.urInstant;" created="Thu, 17 Jun 2021 22:18:13 GMT"/>
									<outline text="theOutline.opml.head.urlUpdateSocket = config.urlUpdateSocket;" created="Thu, 17 Jun 2021 22:12:45 GMT"/>
									<outline text="theOutline.opml.head.urlPublic = getScriptingOpmlUrl ();" created="Thu, 17 Jun 2021 22:12:45 GMT"/>
									<outline text="theOutline.opml.head.generator = myProductName + &quot; v&quot; + myVersion;" created="Thu, 17 Jun 2021 22:12:45 GMT"/>
									<outline text="theOutline.opml.head.urlInstant = &quot;http://instantoutliner.com/qk&quot;;" created="Mon, 28 Jun 2021 15:59:15 GMT"/>
									<outline text="opmltext = opmlToJs.opmlify (theOutline);" created="Thu, 17 Jun 2021 22:19:39 GMT"/>
									<outline text="uploadToGithub (&quot;scripting.opml&quot;, opmltext, &quot;text/xml&quot;, function (err) {" created="Sat, 13 Mar 2021 15:49:52 GMT">
										<outline text="if (err) {" created="Mon, 21 Jun 2021 16:11:39 GMT">
											<outline text="callback (err); "/>
											<outline text="}" created="Mon, 21 Jun 2021 16:11:43 GMT"/>
											</outline>
										<outline text="else {" created="Mon, 21 Jun 2021 16:11:44 GMT">
											<outline text="callback (undefined, &quot;Thanks for the ping.&quot;);" created="Mon, 21 Jun 2021 16:12:03 GMT"/>
											<outline text="}" created="Mon, 21 Jun 2021 16:11:46 GMT"/>
											</outline>
										<outline text="});" created="Thu, 17 Jun 2021 19:43:27 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Thu, 17 Jun 2021 19:58:50 GMT"/>
							</outline>
						<outline text="})" created="Thu, 17 Jun 2021 19:58:33 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Jun 2021 21:19:51 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Jun 2021 21:18:47 GMT"/>
				<outline text="function startup () {" created="Mon, 21 Jun 2021 21:18:48 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Mon, 21 Jun 2021 15:34:07 GMT"/>
					<outline text="readConfig (fnameConfig, config, function () {" created="Mon, 08 Mar 2021 15:22:23 GMT">
						<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sat, 13 Mar 2021 15:47:53 GMT"/>
						<outline text="davehttp.start (config, function (theRequest) {">
							<outline text="function returnPlainText (s) {">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
								<outline text="}"/>
								</outline>
							<outline text="function returnError (jstruct) {">
								<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
								<outline text="}"/>
								</outline>
							<outline text="function httpReturn (err, message) {">
								<outline text="if (err) {">
									<outline text="returnError (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="returnPlainText (message);"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/ping&quot;:">
									<outline text="handlePing (httpReturn);" created="Mon, 21 Jun 2021 21:20:53 GMT"/>
									<outline text="return;"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="});"/>
							</outline>
						<outline text="});" created="Mon, 08 Mar 2021 15:22:29 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Jun 2021 21:18:58 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Jun 2021 21:18:58 GMT"/>
				<outline text="startup ();" created="Mon, 21 Jun 2021 21:18:59 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 21:18:49 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 21:18:49 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 21:18:49 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 21:18:49 GMT"/>
				<outline text="" created="Mon, 21 Jun 2021 21:18:50 GMT"/>
				</outline>
			<outline text="readme.md" created="Mon, 21 Jun 2021 15:24:30 GMT">
				<outline text="# publishScriptingOpml" created="Mon, 21 Jun 2021 15:24:33 GMT">
					<outline text="A simple server that copies scripting.com's OPML to the instantOutlines project on GitHub, when pinged." created="Mon, 21 Jun 2021 15:24:45 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Mon, 21 Jun 2021 15:21:06 GMT">
			<outline text="nodeEditorSuite.utilities.buildPublishScriptingOpml ();" created="Mon, 21 Jun 2021 15:21:11 GMT"/>
			</outline>
		</body>
	</opml>
